[{"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\index.js":"1","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\App.js":"2","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\reportWebVitals.js":"3","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Current\\ForecastCurrent.js":"4","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\index.js":"5","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\Humidity.js":"6","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\Sunrise.js":"7","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Forecast.js":"8","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Current\\CurrentDetail\\CurrentDetail.js":"9","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\Wind.js":"10","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Daily\\ForecastDaily.js":"11","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\services.js":"12","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\contexts\\ForecastContext.js":"13"},{"size":449,"mtime":1610650859614,"results":"14","hashOfConfig":"15"},{"size":273,"mtime":1610743760940,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606115651529,"results":"17","hashOfConfig":"15"},{"size":1188,"mtime":1610749071301,"results":"18","hashOfConfig":"15"},{"size":136,"mtime":1610737775503,"results":"19","hashOfConfig":"15"},{"size":502,"mtime":1610737775484,"results":"20","hashOfConfig":"15"},{"size":571,"mtime":1610737775484,"results":"21","hashOfConfig":"15"},{"size":801,"mtime":1610749131241,"results":"22","hashOfConfig":"15"},{"size":680,"mtime":1610738744975,"results":"23","hashOfConfig":"15"},{"size":481,"mtime":1610737775484,"results":"24","hashOfConfig":"15"},{"size":578,"mtime":1610747023034,"results":"25","hashOfConfig":"15"},{"size":2161,"mtime":1610745248788,"results":"26","hashOfConfig":"15"},{"size":1267,"mtime":1610748766498,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1t42lyv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\index.js",[],["59","60"],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\App.js",[],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\reportWebVitals.js",[],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Current\\ForecastCurrent.js",["61"],"import React from 'react';\r\nimport CurrentDetail from './CurrentDetail/CurrentDetail';\r\nimport styles from './ForecastCurrent.module.css';\r\n\r\nconst ForecastCurrent = ({ current, city = \"Hatay\" }) => {\r\n  const { day, description, humidity, icon, max, min, sunrise, windSpeed } = current;\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.flexContainerSb}>\r\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"weather icon\" />\r\n        <div className={styles.degree}>\r\n          <small>Highest</small>\r\n          <small>{max} &deg; C</small>\r\n        </div>\r\n        <div className={styles.degree}>\r\n          <small>Lowest</small>\r\n          <small>{min} &deg; C</small>\r\n        </div>\r\n        <p className={styles.desc}>{day}<br />{description}</p>\r\n        <p className={styles.city}>{city}</p>\r\n      </div>\r\n      <div className={styles.flexContainerSb}>\r\n        <CurrentDetail identifier=\"wind\" desc={`%${windSpeed} km/h`} />\r\n        <CurrentDetail identifier=\"humidity\" desc={`%${humidity}`} />\r\n        <CurrentDetail identifier=\"sunrise\" desc=\"06.54\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastCurrent;","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\index.js",[],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\Humidity.js",[],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\Sunrise.js",[],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Forecast.js",["62"],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Current\\CurrentDetail\\CurrentDetail.js",[],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\icons\\Wind.js",[],["63","64"],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\components\\Forecast\\Daily\\ForecastDaily.js",["65"],"import React from 'react';\r\nimport styles from './ForecastDaily.module.css';\r\n\r\nconst ForecastDaily = ({ daily }) => {\r\n  const { day, icon, max, min, main } = daily;\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.conditionStatus}>\r\n        <span>{day}</span>\r\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} />\r\n        <span>{max} &deg; C</span>\r\n        <span>{min} &deg; C</span>\r\n      </div>\r\n      <p className={styles.conditionName}>\r\n        {main}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForecastDaily;\r\n","F:\\kodluyoruz--bootcamp\\weatherapp\\src\\services.js",[],"F:\\kodluyoruz--bootcamp\\weatherapp\\src\\contexts\\ForecastContext.js",["66"],"import { createContext, useEffect, useState } from 'react';\r\nimport forecastService from '../services';\r\n\r\nconst ForecastContext = createContext({});\r\n\r\nexport const ForecastProvider = ({ children }) => {\r\n\r\n  const [getForecast, setForecast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    forecastService\r\n      .getForecast()\r\n      .then(data => mapForecast(data))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  console.log(getForecast);\r\n\r\n  const getDay = (i) => {\r\n    const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    return days[((new Date().getUTCDay() + i) % 7)];\r\n  };\r\n\r\n  const mapForecast = (forecast) => {\r\n    const mappedForecast = forecast.map((daily, index) => {\r\n      return {\r\n        day: getDay(index),\r\n        min: daily.temp.min,\r\n        max: daily.temp.max,\r\n        sunrise: daily.sunrise,\r\n        humidity: daily.humidity,\r\n        windSpeed: daily.wind_speed,\r\n        main: daily.weather[0].main,\r\n        description: daily.weather[0].description,\r\n        icon: daily.weather[0].icon\r\n      };\r\n    });\r\n    setForecast(mappedForecast);\r\n  };\r\n\r\n  return (\r\n    <ForecastContext.Provider value={getForecast}>\r\n      {children}\r\n    </ForecastContext.Provider>\r\n  );\r\n};\r\n\r\n\r\nexport default ForecastContext;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":6,"column":55,"nodeType":"73","messageId":"74","endLine":6,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":20,"column":42,"nodeType":"77","messageId":"78","endLine":20,"endColumn":44},{"ruleId":"67","replacedBy":"79"},{"ruleId":"69","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":10,"column":9,"nodeType":"83","endLine":10,"endColumn":72},{"ruleId":"84","severity":1,"message":"85","line":15,"column":6,"nodeType":"86","endLine":15,"endColumn":8,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'sunrise' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["88"],["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mapForecast'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [mapForecast]",{"range":"93","text":"94"},[411,413],"[mapForecast]"]